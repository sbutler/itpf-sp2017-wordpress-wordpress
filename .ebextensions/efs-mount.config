container_commands:
    01_mount:
        command: "/usr/local/bin/uiuc-techservices-efs.sh"
    02_populate:
        command: "/usr/local/bin/uiuc-techservices-populate-wpcontent.sh"

packages:
    yum:
        nfs-utils: []

files:
    "/etc/opt/uiuc-techservices/efs/wpcontent.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
            efs_filesystem_id=$EFS_WPCONTENT_ID

    "/usr/local/bin/uiuc-techservices-efs.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash

            # Mounts EFS volumes configured in "/etc/opt/uiuc-techservices/efs" inside
            # "/mnt" based on the name of the file in the configuration directory. Options
            # available for each mount:
            #
            #	efs_filesystem_id: the fs-XXXXXXXX ID to mount. Required.
            #	mount_target: where to mount at. Default: /mnt/<config name>
            #	nfs_options: options to pass to mount_nfs4. Default: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2

            aws_data () { curl --silent --fail --retry 3 http://169.254.169.254/$1; }

            #Get region of EC2 from instance metadata
            EC2_AVAIL_ZONE=$(aws_data latest/meta-data/placement/availability-zone)
            EC2_REGION=$(echo "$EC2_AVAIL_ZONE" | sed -e 's:\([0-9][0-9]*\)[a-z]*$:\1:')

            echo "INFO: Availability Zone = $EC2_AVAIL_ZONE"
            echo "INFO: Region = $EC2_REGION"

            uiuc_efs_mount () {
                local name=$(basename "$1" ".conf")
                local efs_filesystem_id=''
                local mount_target="/mnt/${name}"
                local nfs_options="nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2"

                . "$1"

                if [[ -z $efs_filesystem_id ]]; then
                    echo "ERROR: ${name} does not have an 'efs_filesystem_id' set"
                    return 1
                fi

                local dir_src="${efs_filesystem_id}.efs.${EC2_REGION}.amazonaws.com"
                local dir_tgt="$mount_target"

                [[ -e $dir_tgt ]] || mkdir -p "${dir_tgt}"
                if ! mountpoint "${dir_tgt}"; then
                    if ! mount -t nfs4 -o "${nfs_options}" "${dir_src}:/" "${dir_tgt}"; then
                        echo "ERROR: ${name} mounting ${dir_src} to ${dir_tgt} failed"
                        return 1
                    fi
                fi
            }

            for efs_config in /etc/opt/uiuc-techservices/efs/*.conf; do
                [[ -f "$efs_config" ]] || continue
                uiuc_efs_mount "$efs_config"
            done

    "/usr/local/bin/uiuc-techservices-populate-wpcontent.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash

            do_ownership=no

            for d in blogs.dir cache uploads w3tc-config; do
                if [[ ! -e "/mnt/wpcontent/$d" ]]; then
                    mkdir "/mnt/wpcontent/$d"
                    do_ownership=yes
                fi

                if [[ ! -e "wp-content/$d" ]]; then
                    sudo -u webapp ln -s "/mnt/wpcontent/$d" "wp-content/$d"
                fi
            done

            if [[ ! -e /mnt/wpcontent/htaccess ]]; then
                cp htaccess.dist /mnt/wpcontent/htaccess
                do_ownership=yes
            fi

            [[ $do_ownership == no ]] || chown -R webapp:webapp /mnt/wpcontent

            /usr/local/bin/uiuc-techservices-update-htaccess.sh .

            echo 'EFS mount populated.'

    "/usr/local/bin/uiuc-techservices-update-htaccess.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash

            webapp_dir="${1:-/var/www/html}"
            if [[ /mnt/wpcontent/htaccess -nt "${webapp_dir}/.htaccess" ]]; then
                echo "Updating htaccess file"
                cp /mnt/wpcontent/htaccess "${webapp_dir}/.htaccess"

                chmod u=rw,g=r,o=r "${webapp_dir}/.htaccess"
                chown root:root "${webapp_dir}/.htaccess"
            fi

    "/etc/cron.d/uiuc-techservices-update-htaccess":
        mode: "000644"
        owner: root
        group: root
        content: |
            */5 * * * * root /usr/local/bin/uiuc-techservices-update-htaccess.sh > /dev/null
